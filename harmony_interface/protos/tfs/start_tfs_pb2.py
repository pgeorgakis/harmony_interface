# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: start_tfs.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fstart_tfs.proto\x12\rharmonyServer\"\xc1\x0e\n\x08StartTFS\x12\x12\n\nscenarioId\x18\x01 \x02(\t\x12.\n\x06inputs\x18\x02 \x02(\x0b\x32\x1e.harmonyServer.StartTFS.Inputs\x12\x30\n\x07outputs\x18\x03 \x02(\x0b\x32\x1f.harmonyServer.StartTFS.Outputs\x1a\x9c\n\n\x06Inputs\x12\r\n\x05label\x18\x01 \x02(\t\x12\x0f\n\x07modules\x18\x02 \x02(\t\x12\x12\n\ndimensions\x18\x03 \x02(\t\x12\x10\n\x08skimTime\x18\x04 \x02(\t\x12\x14\n\x0cskimDistance\x18\x05 \x02(\t\x12\r\n\x05links\x18\x06 \x02(\t\x12\r\n\x05nodes\x18\x07 \x02(\t\x12\r\n\x05zones\x18\x08 \x02(\t\x12\x0c\n\x04segs\x18\t \x02(\t\x12\x12\n\nsuperZones\x18\n \x02(\t\x12\x1a\n\x12\x63ommodityMatrixSFS\x18\x0b \x02(\t\x12\x10\n\x08\x66irmsSFS\x18\x0c \x02(\t\x12\x1b\n\x13\x64istributionCenters\x18\r \x02(\t\x12\x18\n\x10makeDistribution\x18\x0e \x02(\t\x12\x17\n\x0fuseDistribution\x18\x0f \x02(\t\x12\x13\n\x0bparcelNodes\x18\x10 \x02(\t\x12\x11\n\tcepShares\x18\x11 \x02(\t\x12\x1c\n\x14\x64\x65partureTimeParcels\x18\x12 \x02(\t\x12\x1e\n\x16\x65missionFacsRuralEmpty\x18\x13 \x02(\t\x12\x1d\n\x15\x65missionFacsRuralFull\x18\x14 \x02(\t\x12 \n\x18\x65missionFacsHighwayEmpty\x18\x15 \x02(\t\x12\x1f\n\x17\x65missionFacsHighwayFull\x18\x16 \x02(\t\x12\x1e\n\x16\x65missionFacsUrbanEmpty\x18\x17 \x02(\t\x12\x1d\n\x15\x65missionFacsUrbanFull\x18\x18 \x02(\t\x12\x18\n\x10ZEZconsolidation\x18\x19 \x02(\t\x12\x13\n\x0bZEZscenario\x18\x1a \x02(\t\x12\x16\n\x0e\x63ostPerVehType\x18\x1b \x02(\t\x12\x14\n\x0c\x63ostSourcing\x18\x1c \x02(\t\x12\x17\n\x0fparamsTimeOfDay\x18\x1d \x02(\t\x12\x1d\n\x15paramsShipSizeVehType\x18\x1e \x02(\t\x12\x1a\n\x12paramsEndTourFirst\x18\x1f \x02(\t\x12\x1a\n\x12paramsEndTourLater\x18  \x02(\t\x12\x17\n\x0fparamsParcelB2C\x18! \x02(\t\x12\x19\n\x11paramsProdService\x18\" \x02(\t\x12\x1e\n\x16paramsDistDecayService\x18# \x02(\t\x12\x13\n\x0bMRDHtoNUTS3\x18$ \x02(\t\x12\x13\n\x0bMRDHtoCOROP\x18% \x02(\t\x12\x13\n\x0bNUTS3toMRDH\x18& \x02(\t\x12\x1d\n\x15nstrToLogisticSegment\x18\' \x02(\t\x12\x17\n\x0fvehicleCapacity\x18( \x02(\t\x12\x19\n\x11logisticFlowtypes\x18) \x02(\t\x12\x1a\n\x12parcelsPerEmployee\x18* \x02(\x02\x12\x1d\n\x15parcelsMaxVehicleLoad\x18+ \x02(\x05\x12\x17\n\x0fparcelsDropTime\x18, \x02(\x05\x12\x1d\n\x15parcelsSuccessRateB2C\x18- \x02(\x02\x12\x1d\n\x15parcelsSuccessRateB2B\x18. \x02(\x02\x12!\n\x19parcelsGrowthFreightFlows\x18/ \x02(\x02\x12\x12\n\nyearFactor\x18\x30 \x02(\x05\x12\x1d\n\x15impedanceSpeedFreight\x18\x31 \x02(\t\x12\x19\n\x11impedanceSpeedVan\x18\x32 \x02(\t\x12\x17\n\x0f\x64oCrowdshipping\x18\x33 \x02(\t\x12\x13\n\x0b\x64oNearestDC\x18\x34 \x02(\t\x1a\x9f\x03\n\x07Outputs\x12\x0f\n\x07logFile\x18\x01 \x02(\t\x12\x11\n\tshipments\x18\x02 \x02(\t\x12\x16\n\x0eshipmentsShape\x18\x03 \x02(\t\x12 \n\x18shipmentsAfterScheduling\x18\x04 \x02(\t\x12\r\n\x05tours\x18\x05 \x02(\t\x12\x12\n\ntoursShape\x18\x06 \x02(\t\x12\x12\n\ntripMatrix\x18\x07 \x02(\t\x12\x14\n\x0cparcelDemand\x18\x08 \x02(\t\x12\x19\n\x11parcelDemandShape\x18\t \x02(\t\x12\x16\n\x0eparcelSchedule\x18\n \x02(\t\x12\x1b\n\x13parcelScheduleShape\x18\x0b \x02(\t\x12\x19\n\x11tripMatrixParcels\x18\x0c \x02(\t\x12\x1c\n\x14tripsVanConstruction\x18\r \x02(\t\x12\x17\n\x0ftripsVanService\x18\x0e \x02(\t\x12\x13\n\x0blinksLoaded\x18\x0f \x02(\t\x12\x18\n\x10linksLoadedShape\x18\x10 \x02(\t\x12\x18\n\x10outputIndicators\x18\x11 \x02(\t')



_STARTTFS = DESCRIPTOR.message_types_by_name['StartTFS']
_STARTTFS_INPUTS = _STARTTFS.nested_types_by_name['Inputs']
_STARTTFS_OUTPUTS = _STARTTFS.nested_types_by_name['Outputs']
StartTFS = _reflection.GeneratedProtocolMessageType('StartTFS', (_message.Message,), {

  'Inputs' : _reflection.GeneratedProtocolMessageType('Inputs', (_message.Message,), {
    'DESCRIPTOR' : _STARTTFS_INPUTS,
    '__module__' : 'start_tfs_pb2'
    # @@protoc_insertion_point(class_scope:harmonyServer.StartTFS.Inputs)
    })
  ,

  'Outputs' : _reflection.GeneratedProtocolMessageType('Outputs', (_message.Message,), {
    'DESCRIPTOR' : _STARTTFS_OUTPUTS,
    '__module__' : 'start_tfs_pb2'
    # @@protoc_insertion_point(class_scope:harmonyServer.StartTFS.Outputs)
    })
  ,
  'DESCRIPTOR' : _STARTTFS,
  '__module__' : 'start_tfs_pb2'
  # @@protoc_insertion_point(class_scope:harmonyServer.StartTFS)
  })
_sym_db.RegisterMessage(StartTFS)
_sym_db.RegisterMessage(StartTFS.Inputs)
_sym_db.RegisterMessage(StartTFS.Outputs)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _STARTTFS._serialized_start=35
  _STARTTFS._serialized_end=1892
  _STARTTFS_INPUTS._serialized_start=166
  _STARTTFS_INPUTS._serialized_end=1474
  _STARTTFS_OUTPUTS._serialized_start=1477
  _STARTTFS_OUTPUTS._serialized_end=1892
# @@protoc_insertion_point(module_scope)
